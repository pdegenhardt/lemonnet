<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>LemonNet</PackageId>
    <Version>0.1.0</Version>
    <Authors>Travel Engine</Authors>
    <Company>Travel Engine</Company>
    <Description>High-performance C# wrapper for the LEMON graph library, providing Edmonds-Karp and Preflow maximum flow algorithms with native C++ performance. Supports parallel arcs, type-safe API, and cross-platform operation (Windows/Linux x64).</Description>
    <PackageTags>graph;network-flow;max-flow;edmonds-karp;preflow;push-relabel;lemon;optimization;algorithms;graph-algorithms</PackageTags>
    <RepositoryUrl>https://github.com/pdegenhardt/lemonnet</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/pdegenhardt/lemonnet</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>icon.png</PackageIcon>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <PlatformTarget>x64</PlatformTarget>
    <!-- Include symbols in NuGet package -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <!-- Native files to include in NuGet package (both platforms) -->
  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="" />
    <None Include="..\..\icon.png" Pack="true" PackagePath="" />
    <None Include="LemonNet.targets" Pack="true" PackagePath="build" />
  </ItemGroup>

  <!-- Reference the native project to ensure build order (Windows only) -->
  <ItemGroup Condition="'$(OS)' == 'Windows_NT'">
    <ProjectReference Include="..\LemonNet.Native\LemonWrapper.Native.vcxproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <OutputItemType>Content</OutputItemType>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  
  <!-- Windows: Copy native DLL to output directory when on Windows -->
  <ItemGroup Condition="'$(OS)' == 'Windows_NT'">
    <None Include="..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.dll" 
          Condition="Exists('..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>
    <!-- Include native PDB for debugging -->
    <None Include="..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.pdb" 
          Condition="Exists('..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.pdb')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </None>
  </ItemGroup>
  
  <!-- Pack Windows native DLL (no OS condition so it works from any build platform) -->
  <ItemGroup>
    <None Include="..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.dll" 
          Condition="Exists('..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.dll')">
      <Pack>true</Pack>
      <PackagePath>lib\net9.0</PackagePath>
      <Visible>false</Visible>
    </None>
    <None Include="..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.pdb" 
          Condition="Exists('..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.pdb')">
      <Pack>true</Pack>
      <PackagePath>lib\net9.0</PackagePath>
      <Visible>false</Visible>
    </None>
  </ItemGroup>
  
  <!-- Linux: Include native SO if it exists (built by build.sh) -->
  <!-- The .so file is built directly to the output directory by build.sh, so we only need to pack it -->
  <ItemGroup>
    <None Include="$(OutputPath)lemon_wrapper.so" 
          Condition="Exists('$(OutputPath)lemon_wrapper.so')">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Pack>true</Pack>
      <PackagePath>lib\net9.0</PackagePath>
    </None>
  </ItemGroup>

  <!-- Post-build event to ensure native library is in place (Windows) -->
  <Target Name="CopyNativeDLL" AfterTargets="Build" Condition="'$(OS)' == 'Windows_NT'">
    <PropertyGroup>
      <NativeBuildOutput>$(ProjectDir)..\LemonNet.Native\bin\x64\$(Configuration)\lemon_wrapper.dll</NativeBuildOutput>
    </PropertyGroup>
    <Message Text="Copying native DLL from $(NativeBuildOutput) to $(OutputPath)" Importance="high" />
    <Copy SourceFiles="$(NativeBuildOutput)" 
          DestinationFolder="$(OutputPath)" 
          Condition="Exists('$(NativeBuildOutput)')" 
          SkipUnchangedFiles="true" />
  </Target>

</Project>